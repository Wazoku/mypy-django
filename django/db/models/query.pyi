from typing import *

from .query_utils import Q

ModelType = TypeVar('ModelType')

# We can't use Sequence[ModelType] here, because the count() method is different.
class QuerySet(Generic[ModelType], Iterable[ModelType], Container[ModelType], Sized):
    ...
    def all(self) -> 'QuerySet[ModelType]': ...
    def filter(self, *args, **kwargs) -> 'QuerySet[ModelType]': ...
    def exclude(self, *args, **kwargs) -> 'QuerySet[ModelType]': ...
    def count(self) -> int: ...
    def exists(self) -> bool: ...

class Prefetch:
    def __init__(self, lookup: str, queryset: Optional[QuerySet[Any]] =None, to_attr=None) -> None:
        ...
