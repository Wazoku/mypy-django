# Stubs for django.http.response (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any
import six

class BadHeaderError(ValueError): ...

class HttpResponseBase(six.Iterator):
    status_code = ... # type: Any
    cookies = ... # type: Any
    closed = ... # type: Any
    def __init__(self, content_type=None, status=None, reason=None, charset=None): ...
    @property
    def reason_phrase(self): ...
    @reason_phrase.setter
    def reason_phrase(self, value): ...
    @property
    def charset(self): ...
    @charset.setter
    def charset(self, value): ...
    def serialize_headers(self): ...
    __bytes__ = ... # type: Any
    def __setitem__(self, header, value): ...
    def __delitem__(self, header): ...
    def __getitem__(self, header): ...
    def has_header(self, header): ...
    __contains__ = ... # type: Any
    def items(self): ...
    def get(self, header, alternate=None): ...
    def set_cookie(self, key, value='', max_age=None, expires=None, path='', domain=None, secure=False, httponly=False): ...
    def setdefault(self, key, value): ...
    def set_signed_cookie(self, key, value, salt='', **kwargs): ...
    def delete_cookie(self, key, path='', domain=None): ...
    def make_bytes(self, value): ...
    def close(self): ...
    def write(self, content): ...
    def flush(self): ...
    def tell(self): ...
    def writable(self): ...
    def writelines(self, lines): ...

class HttpResponse(HttpResponseBase):
    streaming = ... # type: Any
    content = ... # type: Any
    def __init__(self, content=b'', *args, **kwargs): ...
    def serialize(self): ...
    __bytes__ = ... # type: Any
    @property
    def content(self): ...
    @content.setter
    def content(self, value): ...
    def __iter__(self): ...
    def write(self, content): ...
    def tell(self): ...
    def getvalue(self): ...
    def writable(self): ...
    def writelines(self, lines): ...

class StreamingHttpResponse(HttpResponseBase):
    streaming = ... # type: Any
    streaming_content = ... # type: Any
    def __init__(self, streaming_content=..., *args, **kwargs): ...
    @property
    def content(self): ...
    @property
    def streaming_content(self): ...
    @streaming_content.setter
    def streaming_content(self, value): ...
    def __iter__(self): ...
    def getvalue(self): ...

class FileResponse(StreamingHttpResponse):
    block_size = ... # type: Any

class HttpResponseRedirectBase(HttpResponse):
    allowed_schemes = ... # type: Any
    def __init__(self, redirect_to, *args, **kwargs): ...
    url = ... # type: Any

class HttpResponseRedirect(HttpResponseRedirectBase):
    status_code = ... # type: Any

class HttpResponsePermanentRedirect(HttpResponseRedirectBase):
    status_code = ... # type: Any

class HttpResponseNotModified(HttpResponse):
    status_code = ... # type: Any
    def __init__(self, *args, **kwargs): ...
    def content(self, value): ...

class HttpResponseBadRequest(HttpResponse):
    status_code = ... # type: Any

class HttpResponseNotFound(HttpResponse):
    status_code = ... # type: Any

class HttpResponseForbidden(HttpResponse):
    status_code = ... # type: Any

class HttpResponseNotAllowed(HttpResponse):
    status_code = ... # type: Any
    def __init__(self, permitted_methods, *args, **kwargs): ...

class HttpResponseGone(HttpResponse):
    status_code = ... # type: Any

class HttpResponseServerError(HttpResponse):
    status_code = ... # type: Any

class Http404(Exception): ...

class JsonResponse(HttpResponse):
    def __init__(self, data, encoder=..., safe=True, json_dumps_params=None, **kwargs): ...
